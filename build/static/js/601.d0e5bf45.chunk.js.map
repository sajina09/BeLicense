{"version":3,"file":"static/js/601.d0e5bf45.chunk.js","mappings":"uOAiFA,EAtEkD,SAAHA,GAA6B,IAADC,EAAAD,EAAtBE,QAAAA,OAAO,IAAAD,GAAQA,EAC5DE,GAAWC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IAAnDH,OAEFI,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRR,GAASS,EAAAA,EAAAA,MACX,GAAG,CAACT,IAEJ,IA6BMU,EAAkB,SAACC,GACvB,IAAMC,EAAcD,EAAGE,QAAQ,OAAQ,KACvCP,EAAS,IAADQ,OAAKF,GACf,EAEA,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,UACFC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAAAH,UACFF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uBAAsBC,SAAA,CACjC,IAAI,uCAKXC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,UACFC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAAAH,UACFC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAAiBC,SAAC,2BAGnCC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACL,UAAU,eAAeM,KAAK,OAAML,UAC1CC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAG,cAAaP,SAAC,0BAI3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAvDL,WAC9B,IAAMQ,EAAa1B,EAAgB,OAANG,QAAM,IAANA,OAAM,EAANA,EAAQwB,OAAS,EAC9C,OACER,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAV,SACS,OAANf,QAAM,IAANA,OAAM,EAANA,EAAQ0B,MAAM,EAAGH,GAAYI,KAAI,SAACC,EAAOC,GAAK,OAC7Cb,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAELL,UAAU,YACVgB,MAAOF,EAAMG,aACbC,QAAS,WACPxB,EAAgBoB,EAAMG,aACxB,EAAEhB,UAEFC,EAAAA,EAAAA,KAAA,OACEiB,MAAO,CACLC,MAAO,OACPC,SAAU,SACVC,aAAc,WACdC,WAAY,UACZtB,SAEDa,EAAMG,gBAfJF,EAiBE,KAIjB,CA4BuCS,OAGzC,C,2FC3EarC,EAAkDsC,EAAAA,GAGlDxC,EAAiB,WAAH,OAASyC,EAAAA,EAAAA,KAA2B,C,+DCI/D,UARmB,WACjB,OACExB,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAV,UACEC,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,CAAC5C,SAAO,KAG3B,C","sources":["components/ChooseCourse/index.tsx","hooks/useApp.ts","pages/AllCourses/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { useAppDispatch, useAppSelector } from \"hooks/useApp\";\nimport { fetchSubjects } from \"redux/subjectSlice\";\n\ninterface ChooseCourseProps {\n  showAll?: boolean;\n}\n\nconst ChooseCourse: React.FC<ChooseCourseProps> = ({ showAll = false }) => {\n  const dispatch = useAppDispatch();\n  const { fields } = useAppSelector((state) => state.subjects);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchSubjects());\n  }, [dispatch]);\n\n  const renderEngineeringFields = () => {\n    const showNumber = showAll ? fields?.length : 6;\n    return (\n      <>\n        {fields?.slice(0, showNumber).map((field, index) => (\n          <Button\n            key={index}\n            className=\"field-btn\"\n            title={field.subject_name}\n            onClick={() => {\n              navigateToField(field.subject_name);\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {field.subject_name}\n            </div>\n          </Button>\n        ))}\n      </>\n    );\n  };\n\n  const navigateToField = (id: string) => {\n    const formattedId = id.replace(/\\s+/g, \"-\");\n    navigate(`/${formattedId}`);\n  };\n\n  return (\n    <div className=\"choose-course\">\n      <div className=\"section-course\">\n        <Row>\n          <Col>\n            <h1 className=\"section-title-course\">\n              {\" \"}\n              Choose your desired Program!\n            </h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <p className=\"section-content\">Please select one</p>\n          </Col>\n        </Row>\n        <Button className=\"see-more-btn\" type=\"link\">\n          <Link to=\"/all-fields\">See all courses</Link>\n        </Button>\n      </div>\n\n      <div className=\"fields-container\">{renderEngineeringFields()}</div>\n    </div>\n  );\n};\n\nexport default ChooseCourse;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from 'redux/store'\n\n// Use this hook instead of useSelector for typed state selection\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// Use this hook to get a typed dispatch function\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import ChooseCourse from \"components/ChooseCourse\";\nimport React from \"react\";\n\nconst AllCourses = () => {\n  return (\n    <>\n      <ChooseCourse showAll />\n    </>\n  );\n};\n\nexport default AllCourses;\n"],"names":["_ref","_ref$showAll","showAll","dispatch","useAppDispatch","fields","useAppSelector","state","subjects","navigate","useNavigate","useEffect","fetchSubjects","navigateToField","id","formattedId","replace","concat","_jsxs","className","children","_jsx","Row","Col","Button","type","Link","to","showNumber","length","_Fragment","slice","map","field","index","title","subject_name","onClick","style","width","overflow","textOverflow","whiteSpace","renderEngineeringFields","useSelector","useDispatch","ChooseCourse"],"sourceRoot":""}