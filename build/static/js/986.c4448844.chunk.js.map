{"version":3,"file":"static/js/986.c4448844.chunk.js","mappings":"uOAiFA,EAtEkD,SAAHA,GAA6B,IAADC,EAAAD,EAAtBE,QAAAA,OAAO,IAAAD,GAAQA,EAC5DE,GAAWC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IAAnDH,OAEFI,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRR,GAASS,EAAAA,EAAAA,MACX,GAAG,CAACT,IAEJ,IA6BMU,EAAkB,SAACC,GACvB,IAAMC,EAAcD,EAAGE,QAAQ,OAAQ,KACvCP,EAAS,IAADQ,OAAKF,GACf,EAEA,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,UACFC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAAAH,UACFF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uBAAsBC,SAAA,CACjC,IAAI,uCAKXC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,UACFC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAAAH,UACFC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAAiBC,SAAC,2BAGnCC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACL,UAAU,eAAeM,KAAK,OAAML,UAC1CC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAG,cAAaP,SAAC,0BAI3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAvDL,WAC9B,IAAMQ,EAAa1B,EAAgB,OAANG,QAAM,IAANA,OAAM,EAANA,EAAQwB,OAAS,EAC9C,OACER,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAV,SACS,OAANf,QAAM,IAANA,OAAM,EAANA,EAAQ0B,MAAM,EAAGH,GAAYI,KAAI,SAACC,EAAOC,GAAK,OAC7Cb,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAELL,UAAU,YACVgB,MAAOF,EAAMG,aACbC,QAAS,WACPxB,EAAgBoB,EAAMG,aACxB,EAAEhB,UAEFC,EAAAA,EAAAA,KAAA,OACEiB,MAAO,CACLC,MAAO,OACPC,SAAU,SACVC,aAAc,WACdC,WAAY,UACZtB,SAEDa,EAAMG,gBAfJF,EAiBE,KAIjB,CA4BuCS,OAGzC,C,gGC1EQC,EAASC,EAAAA,EAATD,KAyBR,EAhBsC,SAAH5C,GAK5B,IAJLmC,EAAKnC,EAALmC,MACAW,EAAW9C,EAAX8C,YACAC,EAAM/C,EAAN+C,OACA3B,EAAQpB,EAARoB,SAEA,OACEF,EAAAA,EAAAA,MAAC2B,EAAAA,EAAI,CAAC1B,UAAU,SAAS6B,UAAU,EAAM5B,SAAA,EACvCC,EAAAA,EAAAA,KAACuB,EAAI,CAACT,MAAOA,KACbd,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAE0B,IACpC1B,EACA2B,IAAU1B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CAAA7B,SAAE2B,MAG5B,C,2FCxBazC,EAAkD4C,EAAAA,GAGlD9C,EAAiB,WAAH,OAAS+C,EAAAA,EAAAA,KAA2B,C,uJCazDC,EAAyB,CAC7BC,SAAU,CACR,CACEvC,GAAI,IACJqB,MACE,sEACFmB,UAAW,CACT,CACExC,GAAI,IACJqB,MAAO,oBACPmB,UAAW,CACT,kBACA,sFAGJ,CAAExC,GAAI,IAAKqB,MAAO,uBAClB,CAAErB,GAAI,IAAKqB,MAAO,sBAClB,CAAErB,GAAI,IAAKqB,MAAO,uBAClB,CAAErB,GAAI,IAAKqB,MAAO,sBAClB,CAAErB,GAAI,IAAKqB,MAAO,0BA8B1B,EAxBoC,WAClC,OACEd,EAAAA,EAAAA,KAAA,OAAAD,SACGgC,EAAWC,SAASrB,KAAI,SAACuB,GAAO,OAC/BrC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKmC,EAAQpB,SACbd,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACkC,OAAQ,CAAC,GAAI,IAAKC,MAAI,EAAArC,SACxBmC,EAAQD,UAAUtB,KAAI,SAAC0B,GAAQ,IAAAC,EAAA,OAC9BzC,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAAmBqC,KAAM,EAAExC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAEsC,EAASvB,QAC/B,OAARuB,QAAQ,IAARA,GAAmB,QAAXC,EAARD,EAAUJ,iBAAS,IAAAK,OAAX,EAARA,EAAqB3B,KAAI,SAAC0B,GAAQ,OACjCrC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKsC,KACF,MALCA,EAAS5C,GAOb,QAXFyC,EAAQzC,GAcZ,KAId,E,qEC0DA,EApHoC,WAAO,IAAD+C,EAAAC,EAClC3D,GAAWC,EAAAA,EAAAA,KAET2D,GAAazD,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IAArDuD,UAERpD,EAAAA,EAAAA,YAAU,WACRR,GAAS6D,EAAAA,EAAAA,MACX,GAAG,IAEH,IAAAC,GAAsCC,EAAAA,EAAAA,UAAoC,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtEI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,EAAoB,OAARR,QAAQ,IAARA,GAAa,QAALF,EAARE,EAAW,UAAE,IAAAF,OAAL,EAARA,EAAeU,UAC3BC,EAAuB,OAART,QAAQ,IAARA,GAAa,QAALD,EAARC,EAAW,UAAE,IAAAD,OAAL,EAARA,EAAeW,SAoBpC,OACEvD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIiB,MAAO,CAAEoC,UAAW,UAAWtD,SAAEoD,IAC3B,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWvC,KAAI,SAAC2C,EAAezC,GAC9B,IAAM0C,EAAaP,EAAYM,EAAS7D,IAClC+D,EAAYD,IAAeD,EAASG,eAE1C,OACE5D,EAAAA,EAAAA,MAAC2B,EAAAA,EAAI,CAEHV,OACEd,EAAAA,EAAAA,KAAA,OACE0D,wBAAyB,CACvBC,OAAO,oDAAD/D,OACJiB,EAAQ,EAAC,YAAAjB,OACA0D,EAASxC,MAAK,aAG9Bf,SAAA,EAEDC,EAAAA,EAAAA,KAAC4D,EAAAA,GAAAA,MAAW,CACV3C,MAAO,CAAE4C,QAAS,OAAQC,cAAe,UACzChE,UAAU,uBACViE,SAAU,SAACC,GAAC,OAzCIC,EAyCoBX,EAAS7D,GAzCTyE,EAyCaF,EAAEG,OAAOC,WAxCpEC,YAAW,WACTpB,GAAe,SAACqB,GAAW,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBD,GAAW,IAAAE,EAAAA,EAAAA,GAAA,GACbP,EAAaC,GAAc,GAEhC,GAAG,KANsB,IAACD,EAAoBC,CAyC4B,EAACnE,SAEhE,CAAC,IAAK,IAAK,IAAK,KAAKY,KAAI,SAAC8D,GAAM,OAC/BzE,EAAAA,EAAAA,KAAC4D,EAAAA,GAAK,CAEJQ,MAAOK,EACPxD,MAAO,CACLyD,MACEnB,GAAckB,IAAWlB,EACrBC,EACE,QACA,MACF,SACNzD,UAEFC,EAAAA,EAAAA,KAAA,KACEiB,MAAO,CACL0D,aAAc,MACdC,WAAY,MACZC,QAAS,UACTC,gBACEvB,GAAckB,IAAWlB,EACrBC,EACE,UACA,UACF,SAERE,wBAAyB,CAAEC,OAAQL,EAASmB,OAvBzCA,EAyBC,OAGZzE,EAAAA,EAAAA,KAAC+E,EAAAA,EAAQ,CACP9D,MAAO,CAAE+D,UAAW,QACpBC,MAAO,CACL,CACEC,IAAK,IACLC,MAAO,SACPpF,UACEC,EAAAA,EAAAA,KAAA,OACEiB,MAAO,CACL0D,aAAc,MAEdG,gBAAiB,mBACjBD,QAAS,OACTO,OAAQ,GAEV1B,wBAAyB,CAAEC,OAAQL,EAAS+B,eAGhDC,OAAOtF,EAAAA,EAAAA,KAAA,OAAAD,SAAK,4BAhEbuD,EAAS7D,GAsEpB,MAGN,E,oBCvHM8F,EAAO,CACX,CACEzE,MAAO,WAET,CACEA,MAAO,WAET,CACEA,MAAO,WAET,CACEA,MAAO,YAkCX,EA9B4B,WAC1B,IAAM0E,EAAiB,WACrBC,QAAQC,IAAI,KACd,EACMC,EAAa,WAAO,EAE1B,OACE3F,EAAAA,EAAAA,KAAC4F,EAAAA,EAAI,CACHC,KAAM,CAAE1D,OAAQ,GAAI2D,OAAQ,GAC5BC,WAAYR,EACZS,WAAY,SAACC,GAAI,OACfjG,EAAAA,EAAAA,KAAC4F,EAAAA,EAAKM,KAAI,CAAAnG,UACRC,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACV,MAAOmF,EAAKnF,MAAMf,UACtBF,EAAAA,EAAAA,MAAA,OACEoB,MAAO,CACL4C,QAAS,OACTC,cAAe,MACfqC,eAAgB,gBAChBpG,SAAA,EAEFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CAACZ,QAASwE,EAAezF,SAAC,eACnCC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CAACZ,QAAS2E,EAAW5F,SAAC,qBAGzB,GAIpB,E,UC/BMqG,EAAU,CACd,CACE3G,GAAI,IACJqB,MAAO,YACPuF,IAAK,+BAEP,CACE5G,GAAI,IACJqB,MAAO,YACPuF,IAAK,gCAuET,EAlEiC,WAC/B,IAAAzD,GAA4CC,EAAAA,EAAAA,UAAwB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlE0D,EAAcxD,EAAA,GAAEyD,EAAiBzD,EAAA,GAMxC,OACEjD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,MAAC2G,EAAAA,GAAM,CAAAzG,SAAA,EACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPC,EAAAA,EAAAA,KAAA,QACEyG,KAAK,cACLC,QAAQ,iDAEV1G,EAAAA,EAAAA,KAAA,QACE2G,IAAI,YACJC,KAAK,gEAGT5G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAuBmB,MAAO,CAAEC,MAAO,SAAUnB,UAC9DC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CACL/F,MAAM,yBACNW,YAAY,oFAIhBzB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,UACFC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAAAH,UACFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gBAAeC,SAAC,qCAIpCC,EAAAA,EAAAA,KAAC8G,EAAS,KACV9G,EAAAA,EAAAA,KAAC+G,EAAiB,KAClB/G,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CACHC,YAAY,MACZC,iBAAiB,IACjBpH,UAAU,cACViE,SAAU,SAACmB,GACT,IAAMiC,EAASf,EAAQgB,MAAK,SAACD,GAAM,OAAKA,EAAO1H,KAAOyF,CAAG,IAEvDqB,EADEY,GAGgB,KAEtB,EAAEpH,SAEDqG,EAAQzF,KAAI,SAACwG,GAAM,OAClBnH,EAAAA,EAAAA,KAACgH,EAAAA,EAAKK,QAAO,CAACC,IAAKH,EAAOrG,MAAMf,SAC7BuG,IACCtG,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACuH,EACD,OAJgCJ,EAAO1H,GAQ9B,OAGnBO,EAAAA,EAAAA,KAACwH,EAAAA,EAAY,MAGnB,C","sources":["components/ChooseCourse/index.tsx","components/Ticket/index.tsx","hooks/useApp.ts","components/SubtopicComponent/index.tsx","components/Questions/index.tsx","ModelList/index.tsx","pages/CourseSpecific/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { useAppDispatch, useAppSelector } from \"hooks/useApp\";\nimport { fetchSubjects } from \"redux/subjectSlice\";\n\ninterface ChooseCourseProps {\n  showAll?: boolean;\n}\n\nconst ChooseCourse: React.FC<ChooseCourseProps> = ({ showAll = false }) => {\n  const dispatch = useAppDispatch();\n  const { fields } = useAppSelector((state) => state.subjects);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchSubjects());\n  }, [dispatch]);\n\n  const renderEngineeringFields = () => {\n    const showNumber = showAll ? fields?.length : 6;\n    return (\n      <>\n        {fields?.slice(0, showNumber).map((field, index) => (\n          <Button\n            key={index}\n            className=\"field-btn\"\n            title={field.subject_name}\n            onClick={() => {\n              navigateToField(field.subject_name);\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {field.subject_name}\n            </div>\n          </Button>\n        ))}\n      </>\n    );\n  };\n\n  const navigateToField = (id: string) => {\n    const formattedId = id.replace(/\\s+/g, \"-\");\n    navigate(`/${formattedId}`);\n  };\n\n  return (\n    <div className=\"choose-course\">\n      <div className=\"section-course\">\n        <Row>\n          <Col>\n            <h1 className=\"section-title-course\">\n              {\" \"}\n              Choose your desired Program!\n            </h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <p className=\"section-content\">Please select one</p>\n          </Col>\n        </Row>\n        <Button className=\"see-more-btn\" type=\"link\">\n          <Link to=\"/all-fields\">See all courses</Link>\n        </Button>\n      </div>\n\n      <div className=\"fields-container\">{renderEngineeringFields()}</div>\n    </div>\n  );\n};\n\nexport default ChooseCourse;\n","import React, { ReactNode } from \"react\";\nimport { Card } from \"antd\";\nimport \"./styles.css\";\nimport BeButton from \"components/Button\";\n\nconst { Meta } = Card;\n\ninterface TicketProps {\n  title: string | ReactNode;\n  description: string;\n  button?: string;\n  children?: ReactNode;\n}\n\nconst Ticket: React.FC<TicketProps> = ({\n  title,\n  description,\n  button,\n  children,\n}) => {\n  return (\n    <Card className=\"ticket\" bordered={false}>\n      <Meta title={title} />\n      <div className=\"ticket-description\">{description}</div>\n      {children}\n      {button && <BeButton>{button}</BeButton>}\n    </Card>\n  );\n};\n\nexport default Ticket;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from 'redux/store'\n\n// Use this hook instead of useSelector for typed state selection\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// Use this hook to get a typed dispatch function\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./styles.css\";\n\ninterface Subtopic {\n  id: string;\n  title: string;\n  subtopics?: string[];\n}\n\ninterface Chapter {\n  id: string;\n  title: string;\n  subtopics: Subtopic[];\n}\n\ninterface CourseData {\n  chapters: Chapter[];\n}\n\nconst courseData: CourseData = {\n  chapters: [\n    {\n      id: \"1\",\n      title:\n        \"Chapter 1 : Concept of Basic ELectrical and Electronics Engineering\",\n      subtopics: [\n        {\n          id: \"1\",\n          title: \"1.1 Basic Concept\",\n          subtopics: [\n            \"Second Subtopic\",\n            \"Second Sub Second Sub topic topic Second Subtopic Second Subtopic Second Subtopic\",\n          ],\n        },\n        { id: \"2\", title: \"1.2 Second Subtopic\" },\n        { id: \"3\", title: \"1.3 Third Subtopic\" },\n        { id: \"4\", title: \"1.4 Fourth Subtopic\" },\n        { id: \"5\", title: \"1.5 Fifth Subtopic\" },\n        { id: \"6\", title: \"1.6 Sixth Subtopic\" },\n      ],\n    },\n  ],\n};\n\nconst SubtopicComponent: React.FC = () => {\n  return (\n    <div>\n      {courseData.chapters.map((chapter) => (\n        <div key={chapter.id}>\n          <h3>{chapter.title}</h3>\n          <Row gutter={[16, 16]} wrap>\n            {chapter.subtopics.map((subtopic) => (\n              <Col key={subtopic.id} span={8}>\n                <div className=\"chapter-name\">{subtopic.title}</div>\n                {subtopic?.subtopics?.map((subtopic) => (\n                  <ul>\n                    <li>{subtopic}</li>\n                  </ul>\n                ))}\n              </Col>\n            ))}\n          </Row>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SubtopicComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Collapse, Radio } from \"antd\";\nimport { useAppDispatch, useAppSelector } from \"hooks/useApp\";\nimport { fetchModelSet } from \"redux/subjectSlice\";\n\nexport type IQuestionProps = {\n  isTimedExam?: boolean; // Difference between exam and practice questions\n};\n\nconst QuestionComponent: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const { modelset } = useAppSelector((state) => state.subjects);\n\n  useEffect(() => {\n    dispatch(fetchModelSet());\n  }, []);\n\n  const [userAnswers, setUserAnswers] = useState<{ [key: number]: string }>({});\n\n  const questions = modelset?.[0]?.questions;\n  const modelSetName = modelset?.[0]?.set_name;\n\n  const handleAnswerChange = (questionId: number, selectedOption: string) => {\n    setTimeout(() => {\n      setUserAnswers((prevAnswers) => ({\n        ...prevAnswers,\n        [questionId]: selectedOption,\n      }));\n    }, 100);\n\n    // if (selectedOption !== questions[questionId].correct_answer) {\n    //   setTimeout(() => {\n    //     setUserAnswers((prevAnswers) => ({\n    //       ...prevAnswers,\n    //       [questionId]: \"black\", // Change the text color back to black\n    //     }));\n    //   }, 3000); // 3 seconds\n    // }\n  };\n\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>{modelSetName}</h1>\n      {questions?.map((question: any, index: number) => {\n        const userAnswer = userAnswers[question.id];\n        const isCorrect = userAnswer === question.correct_answer;\n\n        return (\n          <Card\n            key={question.id}\n            title={\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: `<div style=\"display: flex; align-items: center;\">${\n                    index + 1\n                  }. &nbsp;${question.title}</div>`,\n                }}\n              />\n            }\n          >\n            <Radio.Group\n              style={{ display: \"flex\", flexDirection: \"column\" }}\n              className=\"vertical-radio-group\"\n              onChange={(e) => handleAnswerChange(question.id, e.target.value)}\n            >\n              {[\"A\", \"B\", \"C\", \"D\"].map((option) => (\n                <Radio\n                  key={option}\n                  value={option}\n                  style={{\n                    color:\n                      userAnswer && option === userAnswer\n                        ? isCorrect\n                          ? \"green\"\n                          : \"red\"\n                        : \"black\",\n                  }}\n                >\n                  <p\n                    style={{\n                      borderRadius: \"8px\",\n                      lineHeight: \"0px\",\n                      padding: \"1px 8px\",\n                      backgroundColor:\n                        userAnswer && option === userAnswer\n                          ? isCorrect\n                            ? \"#daedd1\"\n                            : \"#f5dada\"\n                          : \"white\",\n                    }}\n                    dangerouslySetInnerHTML={{ __html: question[option] }}\n                  />\n                </Radio>\n              ))}\n            </Radio.Group>\n            <Collapse\n              style={{ marginTop: \"10px\" }}\n              items={[\n                {\n                  key: \"1\",\n                  label: \"Answer\",\n                  children: (\n                    <div\n                      style={{\n                        borderRadius: \"8px\",\n\n                        backgroundColor: \"rgb(255 245 231)\",\n                        padding: \"10px\",\n                        margin: 0,\n                      }}\n                      dangerouslySetInnerHTML={{ __html: question.explanation }}\n                    />\n                  ),\n                  extra: <div>Similar questions</div>,\n                },\n              ]}\n            />\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default QuestionComponent;\n","import React from \"react\";\nimport { Card, List } from \"antd\";\nimport BeButton from \"components/Button\";\n\nconst data = [\n  {\n    title: \"Title 1\",\n  },\n  {\n    title: \"Title 2\",\n  },\n  {\n    title: \"Title 3\",\n  },\n  {\n    title: \"Title 4\",\n  },    \n];\n\nconst ModelList: React.FC = () => {\n  const handlePractice = () => {\n    console.log(\"hi\");\n  };\n  const handleExam = () => {};\n\n  return (\n    <List\n      grid={{ gutter: 16, column: 4 }}\n      dataSource={data}\n      renderItem={(item) => (\n        <List.Item>\n          <Card title={item.title}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-around\",\n              }}\n            >\n              <BeButton onClick={handlePractice}> Practice</BeButton>\n              <BeButton onClick={handleExam}> Take Exam</BeButton>\n            </div>\n          </Card>\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default ModelList;\n","import React, { useState } from \"react\";\nimport { Col, Row, Tabs } from \"antd\";\nimport Ticket from \"components/Ticket\";\nimport \"./styles.css\";\nimport ChooseCourse from \"components/ChooseCourse\";\nimport SubtopicComponent from \"components/SubtopicComponent\";\n\nimport QuestionComponent from \"components/Questions\";\nimport ModelList from \"ModelList\";\nimport { Helmet } from \"react-helmet-async\";\n\ninterface Course {\n  id: string;\n  title: string;\n}\n\nconst courses = [\n  {\n    id: \"1\",\n    title: \"Chapter 1\",\n    url: \"https://example.com/course1\",\n  },\n  {\n    id: \"2\",\n    title: \"Chapter 2\",\n    url: \"https://example.com/course2\",\n  },\n  // Add more course objects as needed\n];\n\nconst CourseSpecific: React.FC = () => {\n  const [selectedCourse, setSelectedCourse] = useState<Course | null>(null);\n\n  const handleCourseClick = (course: Course) => {\n    setSelectedCourse(course);\n  };\n\n  return (\n    <div className=\"course-specific-container\">\n      <Helmet>\n        <title>Syllabus</title>\n        <meta\n          name=\"description\"\n          content=\"Syllabus for nec engineering license of IT.\"\n        />\n        <link\n          rel=\"canonical\"\n          href=\"/Information-Technology-&-Telecommunication-Engineering\"\n        />\n      </Helmet>\n      <div className=\"course-specific-name\" style={{ width: \"400px\" }}>\n        <Ticket\n          title=\"Information Technology\"\n          description=\"A detailed, reliable view of your IT knowledge in a quick convenient format.\"\n        />\n      </div>\n\n      <div className=\"section\">\n        <Row>\n          <Col>\n            <h1 className=\"section-title\">Available Model Questions</h1>\n          </Col>\n        </Row>\n      </div>\n      <ModelList />\n      <QuestionComponent />\n      <Tabs\n        tabPosition=\"top\"\n        defaultActiveKey=\"0\"\n        className=\"chapter-tab\"\n        onChange={(key) => {\n          const course = courses.find((course) => course.id === key);\n          if (course) {\n            setSelectedCourse(course);\n          } else {\n            setSelectedCourse(null);\n          }\n        }}\n      >\n        {courses.map((course) => (\n          <Tabs.TabPane tab={course.title} key={course.id}>\n            {selectedCourse && (\n              <div>\n                <SubtopicComponent\n                //   courseId={selectedCourse.id}\n                />\n              </div>\n            )}\n          </Tabs.TabPane>\n        ))}\n      </Tabs>\n      <ChooseCourse />\n    </div>\n  );\n};\n\nexport default CourseSpecific;\n"],"names":["_ref","_ref$showAll","showAll","dispatch","useAppDispatch","fields","useAppSelector","state","subjects","navigate","useNavigate","useEffect","fetchSubjects","navigateToField","id","formattedId","replace","concat","_jsxs","className","children","_jsx","Row","Col","Button","type","Link","to","showNumber","length","_Fragment","slice","map","field","index","title","subject_name","onClick","style","width","overflow","textOverflow","whiteSpace","renderEngineeringFields","Meta","Card","description","button","bordered","BeButton","useSelector","useDispatch","courseData","chapters","subtopics","chapter","gutter","wrap","subtopic","_subtopic$subtopics","span","_modelset$","_modelset$2","modelset","fetchModelSet","_useState","useState","_useState2","_slicedToArray","userAnswers","setUserAnswers","questions","modelSetName","set_name","textAlign","question","userAnswer","isCorrect","correct_answer","dangerouslySetInnerHTML","__html","Radio","display","flexDirection","onChange","e","questionId","selectedOption","target","value","setTimeout","prevAnswers","_objectSpread","_defineProperty","option","color","borderRadius","lineHeight","padding","backgroundColor","Collapse","marginTop","items","key","label","margin","explanation","extra","data","handlePractice","console","log","handleExam","List","grid","column","dataSource","renderItem","item","Item","justifyContent","courses","url","selectedCourse","setSelectedCourse","Helmet","name","content","rel","href","Ticket","ModelList","QuestionComponent","Tabs","tabPosition","defaultActiveKey","course","find","TabPane","tab","SubtopicComponent","ChooseCourse"],"sourceRoot":""}